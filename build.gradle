plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
}

apply plugin: "kotlin"
apply plugin: "groovy"

version "0.1"
group "mockbeanissuedemo"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.3'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.3.31'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "javax.annotation:javax.annotation-api"
    compile "io.micronaut:micronaut-http-server-netty"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtime "ch.qos.logback:logback-classic:1.2.3"

    kaptTest "io.micronaut:micronaut-inject-java"
    testCompile "cglib:cglib-nodep:3.2.12"
    testCompile "org.objenesis:objenesis:3.0.1"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy"
    }
    testCompile "io.micronaut.test:micronaut-test-spock"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile 'com.github.tomakehurst:wiremock-standalone:2.17.0'
}

test.classpath += configurations.developmentOnly

mainClassName = "mockbeanissuedemo.Application"

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
